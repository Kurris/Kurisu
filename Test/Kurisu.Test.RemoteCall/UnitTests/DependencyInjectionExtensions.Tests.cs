// <auto-generated />

using System.Net;
using Kurisu.RemoteCall.Abstractions;
using Microsoft.Extensions.DependencyInjection;
using Kurisu.RemoteCall.Attributes;
using Xunit;

namespace Kurisu.Test.RemoteCall.UnitTests;

public class DependencyInjectionExtensions_Tests
{
    private class MyAuthHandler : IRemoteCallAuthTokenHandler
    {
        public async Task<string> GetTokenAsync()
        {
            throw new NotImplementedException();
        }
    }
    private class MyResponseHandler : IRemoteCallResponseResultHandler
    {
        public TResult Handle<TResult>(HttpStatusCode statusCode, string responseBody)
        {
            throw new NotImplementedException();
        }
    }
    private class MyContentHandler : IRemoteCallContentHandler { }
    private class MyHeaderHandler :IRemoteCallHeaderHandler
    {
        public async Task<Dictionary<string, string>> GetHeadersAsync()
        {
            throw new NotImplementedException();
        }
    }

    [EnableRemoteClient("myclient", "http://localhost")]
    [RequestAuthorize( typeof(MyAuthHandler))]
    [ResponseResult(typeof(MyResponseHandler))]
    [RequestContent( typeof(MyContentHandler))]
    private interface IMyApi
    {
        [RequestHeader(typeof(MyHeaderHandler))]
        Task<string> Test(string s);
    }

    [Fact]
    public void AddRemoteCall_ScansAndRegistersCustomHandlers()
    {
        var services = new ServiceCollection();
        services.AddRemoteCall(new[] { typeof(IMyApi) });

        // Ensure handler types were added as singletons
        Assert.Contains(services, sd => sd.ServiceType == typeof(MyAuthHandler));
        Assert.Contains(services, sd => sd.ServiceType == typeof(MyResponseHandler));
        Assert.Contains(services, sd => sd.ServiceType == typeof(MyContentHandler));
        Assert.Contains(services, sd => sd.ServiceType == typeof(MyHeaderHandler));

        // Ensure HttpClientRemoteCallClient is registered
        Assert.Contains(services, sd => sd.ServiceType == typeof(Kurisu.RemoteCall.HttpClientRemoteCallClient));
    }
}

