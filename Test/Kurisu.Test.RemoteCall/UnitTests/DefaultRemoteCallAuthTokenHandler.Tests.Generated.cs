// <auto-generated />
using Kurisu.RemoteCall.Default;
using Microsoft.AspNetCore.Http;
using Microsoft.Net.Http.Headers;

namespace Kurisu.Test.RemoteCall.UnitTests;

public class DefaultRemoteCallAuthTokenHandler_Tests
{
    [Fact]
    public async Task GetTokenAsync_ReturnsToken_WhenHeaderPresent()
    {
        var context = new DefaultHttpContext();
        context.Request.Headers[HeaderNames.Authorization] = "Bearer abc";
        var accessor = new HttpContextAccessor { HttpContext = context };
        var handler = new DefaultRemoteCallAuthTokenHandler(accessor);
        var token = await handler.GetTokenAsync();
        Assert.Equal("Bearer abc", token);
    }

    [Fact]
    public async Task GetTokenAsync_Throws_WhenHttpContextNull()
    {
        var accessor = new HttpContextAccessor { HttpContext = null };
        var handler = new DefaultRemoteCallAuthTokenHandler(accessor);
        await Assert.ThrowsAsync<ArgumentNullException>(() => handler.GetTokenAsync());
    }

    [Fact]
    public async Task GetTokenAsync_Throws_WhenHeaderMissing()
    {
        var context = new DefaultHttpContext();
        var accessor = new HttpContextAccessor { HttpContext = context };
        var handler = new DefaultRemoteCallAuthTokenHandler(accessor);
        await Assert.ThrowsAsync<ArgumentNullException>(() => handler.GetTokenAsync());
    }
}

