// <auto-generated />
using System;
using Kurisu.RemoteCall.Attributes;
using Kurisu.RemoteCall.Abstractions;
using Kurisu.RemoteCall.Utils;
using Xunit;

namespace Kurisu.Test.RemoteCall.UnitTests
{
    public class RequestContentAttribute_Tests
    {
        private class BadHandler { }

        [Fact]
        public void Ctor_NullHandler_ThrowsArgumentNullException()
        {
            Assert.Throws<ArgumentNullException>(() => new RequestContentAttribute(null));
        }

        [Fact]
        public void Ctor_InvalidHandler_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new RequestContentAttribute(typeof(BadHandler)));
        }

        private class GoodHandler : IRemoteCallContentHandler
        {
            public System.Net.Http.HttpContent PostTestAsync(string data) => new System.Net.Http.StringContent(data);
        }

        [Fact]
        public void Ctor_ValidHandler_SetsHandler()
        {
            var attr = new RequestContentAttribute(typeof(GoodHandler));
            Assert.Equal(typeof(GoodHandler), attr.Handler);
        }
    }
}

